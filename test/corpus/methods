========================================================================
Test an empty method
========================================================================

.class public LA/BC;
.super Ljava/lang/Object;
.source ""

.method public empty()V
.end method

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    identifier: (class_identifier))
  (super_directive
    identifier: (class_identifier))
  (source_directive
    (string_literal))
  (method_definition
    (method_declaration
      modifiers: (access_modifiers)
      identifier: (method_identifier
        return_type: (primitive_type)))
    (end_method)))



========================================================================
Test a method with no modifiers
========================================================================

.class public LA/BC;
.super Ljava/lang/Object;
.source ""

.method empty()V
.end method

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    identifier: (class_identifier))
  (super_directive
    identifier: (class_identifier))
  (source_directive
    (string_literal))
  (method_definition
    (method_declaration
      identifier: (method_identifier
        return_type: (primitive_type)))
    (end_method)))



========================================================================
Test a method with one primitive parameter
========================================================================

.class public LA/BC;
.super Ljava/lang/Object;
.source ""

.method public empty(I)V
.end method

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    identifier: (class_identifier))
  (super_directive
    identifier: (class_identifier))
  (source_directive
    (string_literal))
  (method_definition
    (method_declaration
      modifiers: (access_modifiers)
      identifier: (method_identifier
        parameters: (parameters
          (primitive_type))
        return_type: (primitive_type)))
    (end_method)))



========================================================================
Test a method with multiple primitive parameter
========================================================================

.class public LA/BC;
.super Ljava/lang/Object;
.source ""

.method public empty(IZJ)V
.end method

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    identifier: (class_identifier))
  (super_directive
    identifier: (class_identifier))
  (source_directive
    (string_literal))
  (method_definition
    (method_declaration
      modifiers: (access_modifiers)
      identifier: (method_identifier
        parameters: (parameters
					(primitive_type)
					(primitive_type)
					(primitive_type))
        return_type: (primitive_type)))
    (end_method)))



========================================================================
Test a method with an object parameter
========================================================================

.class public LA/BC;
.super Ljava/lang/Object;
.source ""

.method public static foo(Ljava/lang/String;)V
.end method

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    identifier: (class_identifier))
  (super_directive
    identifier: (class_identifier))
  (source_directive
    (string_literal))
  (method_definition
    (method_declaration
      modifiers: (access_modifiers)
      identifier: (method_identifier
        parameters: (parameters
          (class_identifier))
        return_type: (primitive_type)))
    (end_method)))



========================================================================
Test a method with an array parameter
========================================================================

.class public LA/BC;
.super Ljava/lang/Object;
.source ""

.method public static foo([Ljava/lang/String;)V
.end method

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    identifier: (class_identifier))
  (super_directive
    identifier: (class_identifier))
  (source_directive
    (string_literal))
  (method_definition
    (method_declaration
      modifiers: (access_modifiers)
      identifier: (method_identifier
        parameters: (parameters
          (array_type
            element_type: (class_identifier)))
        return_type: (primitive_type)))
    (end_method)))
