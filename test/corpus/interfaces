========================================================================
Test an empty interface
========================================================================

.class public interface abstract LA/BC;
.super Ljava/lang/Object;
.source ""

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    (class_identifier))
  (super_directive
    (class_identifier))
  (source_directive
    (string)))



========================================================================
Test an empty interface that extends another interface
========================================================================

.class public interface abstract LA/BC;
.super Ljava/lang/Object;
.source ""

.implements LD/EF;

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    (class_identifier))
  (super_directive
    (class_identifier))
  (source_directive
    (string))
  (implements_directive
    (class_identifier)))



========================================================================
Test an interface with one method
========================================================================

.class public interface abstract LA/BC;
.super Ljava/lang/Object;
.source ""

.method public abstract action()V
.end method

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    (class_identifier))
  (super_directive
    (class_identifier))
  (source_directive
    (string))
  (method_definition
    modifiers: (access_modifiers)
      (method_signature
        (method_identifier)
        return_type: (primitive_type))))  



========================================================================
Test an interface with one method with parameters and return value
========================================================================

.class public interface abstract LA/BC;
.super Ljava/lang/Object;
.source ""

.method public abstract action(LD/EF;I)LD/EF;
.end method

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    (class_identifier))
  (super_directive
    (class_identifier))
  (source_directive
    (string))
  (method_definition
    modifiers: (access_modifiers)
      (method_signature
        (method_identifier)
        (parameters
          (class_identifier)
          (primitive_type))
        return_type: (class_identifier))))
