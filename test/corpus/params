========================================================================
Test a simple param
========================================================================

.class public LA/BC;
.super Ljava/lang/Object;
.source ""

.method public simple()V
	.param p1
.end method

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    identifier: (class_identifier))
  (super_directive
    identifier: (class_identifier))
  (source_directive
    (string_literal))
  (method_definition
    (method_declaration
      modifiers: (access_modifiers)
      identifier: (method_identifier
        return_type: (primitive_type)))
    (code_block
      (param_directive
        (start_param
          parameter: (parameter))))
    (end_method)))



========================================================================
Test a simple param block
========================================================================

.class public LA/BC;
.super Ljava/lang/Object;
.source ""

.method public simple()V
	.param p1
  .end param
.end method

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    identifier: (class_identifier))
  (super_directive
    identifier: (class_identifier))
  (source_directive
    (string_literal))
  (method_definition
    (method_declaration
      modifiers: (access_modifiers)
      identifier: (method_identifier
        return_type: (primitive_type)))
    (code_block
      (param_directive
        (start_param
          parameter: (parameter))
        (end_param)))
    (end_method)))



========================================================================
Test a param block with an empty annotation
========================================================================

.class public LA/BC;
.super Ljava/lang/Object;
.source ""

.method public simple()V
	.param p1
    .annotation build Landroidx/annotation/RecentlyNonNull;
    .end annotation
  .end param
.end method

---

(class_definition
  (class_directive
    modifiers: (access_modifiers)
    identifier: (class_identifier))
  (super_directive
    identifier: (class_identifier))
  (source_directive
    (string_literal))
  (method_definition
    (method_declaration
      modifiers: (access_modifiers)
      identifier: (method_identifier
        return_type: (primitive_type)))
    (code_block
      (param_directive
        (start_param
          parameter: (parameter))
        (annotation_directive
          (start_annotation
            visibility: (annotation_visibility)
            identifier: (class_identifier))
          (end_annotation))
        (end_param)))
    (end_method)))
