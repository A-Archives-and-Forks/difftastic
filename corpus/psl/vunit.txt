=================================
Verification Unit I [GHDL]
=================================
vunit verif2 (assert2)
{
  default clock is rising_edge(clk);
  assume always cnt < 10;
  assert always cnt /= 5 abort rst;
}
---

(design_file
  (design_unit
    (PSL_verification_unit
      (PSL_VUnit_header
        type: (keywoard)
        (PSL_identifier)
        (hierarchical_hdl_name
          entity_name: (simple_name)))
      (PSL_VUnit_body
        (PSL_clock_declaration
          clock: (ambiguous_name
            prefix: (simple_name)
            (association_list
              (positional_association_element
                (actual_part
                  (actual_designator
                    (simple_name)))))))
        (PSL_assumption_directive
          property: (invariance_property
            property: (relation
              left: (simple_name)
              right: (integer_decimal))))
        (PSL_assertion_directive
          property: (invariance_property
            property: (termination_property
              property: (relation
                left: (simple_name)
                right: (integer_decimal))
              condition: (simple_name))))))))

=================================
Verification Unit II [GHDL]
=================================
vunit verif4 (assert2(behav))
{
  default clock is rising_edge(clk);
  function check_val (v : unsigned) return boolean is
  begin
    return v < 10;
  end check_val;
  assume always check_val (val);
  assert always val /= 5 abort rst;
}
---

(design_file
  (design_unit
    (PSL_verification_unit
      (PSL_VUnit_header
        type: (keywoard)
        (PSL_identifier)
        (hierarchical_hdl_name
          entity_name: (simple_name)
          architecture_identifier: (simple_name)))
      (PSL_VUnit_body
        (PSL_clock_declaration
          clock: (ambiguous_name
            prefix: (simple_name)
            (association_list
              (positional_association_element
                (actual_part
                  (actual_designator
                    (simple_name)))))))
        (subprogram_body
          (pure_function_specification
            designator: (identifier)
            (formal_function_parameter_clause
              (interface_constant_declaration
                (identifier_list
                  (identifier))
                (subtype_indication
                  type_mark: (simple_name))))
            (return
              type_mark: (simple_name)))
          (subprogram_statement_part
            (return_statement
              (relation
                left: (simple_name)
                right: (integer_decimal))))
          at_end: (simple_name))
        (PSL_assumption_directive
          property: (invariance_property
            property: (ambiguous_name
              prefix: (simple_name)
              (association_list
                (positional_association_element
                  (actual_part
                    (actual_designator
                      (simple_name))))))))
        (PSL_assertion_directive
          property: (invariance_property
            property: (termination_property
              property: (relation
                left: (simple_name)
                right: (integer_decimal))
              condition: (simple_name))))))))
