========================================
Minimal
========================================
assert a'b;
---

(design_file
  (concurrent_assertion_statement
    condition: (attribute_name
      prefix: (simple_name)
      (attribute_designator))))

========================================
Prefix: Ambiguous name
========================================
assert a'b(x);
---

(design_file
  (concurrent_assertion_statement
    condition: (ambiguous_name
      prefix: (attribute_name
        prefix: (simple_name)
        (attribute_designator))
      (association_list
        (positional_association_element
          (actual_part
            (actual_designator
              (simple_name))))))))

========================================
Prefix: Attribute name
========================================
assert a'base'left;
---

(design_file
  (concurrent_assertion_statement
    condition: (attribute_name
      prefix: (attribute_name
        prefix: (simple_name)
        (attribute_designator))
      (attribute_designator))))

========================================
Signature I
========================================
assert a[return x]'a;
---

(design_file
  (concurrent_assertion_statement
    condition: (attribute_name
      prefix: (simple_name)
      (signature
        (return
          type_mark: (simple_name)))
      (attribute_designator))))

========================================
Signature II
========================================
assert a[x,y,z]'a;
---

(design_file
  (concurrent_assertion_statement
    condition: (attribute_name
      prefix: (simple_name)
      (signature
        type_mark: (simple_name)
        type_mark: (simple_name)
        type_mark: (simple_name))
      (attribute_designator))))

========================================
Signature III
========================================
assert a[x,y return z]'a;
---

(design_file
  (concurrent_assertion_statement
    condition: (attribute_name
      prefix: (simple_name)
      (signature
        type_mark: (simple_name)
        type_mark: (simple_name)
        (return
          type_mark: (simple_name)))
      (attribute_designator))))
