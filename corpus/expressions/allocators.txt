=========================================
Minimal [LRM]
=========================================
assert new Node;
---

(design_file
  (assertion_statement
    (allocator
      (subtype_indication
        (type_mark
          (simple_name))))))

=========================================
Qualified expression I [LRM]
=========================================
assert new Node'(Delay => 5 ns,
                \Next\ => Stack);
---

(design_file
  (assertion_statement
    (allocator
      (qualified_expression
        (type_mark
          (simple_name))
        (aggregate
          (element_association_list
            (named_element_association
              (choices
                (simple_name))
              value: (physical_literal
                (integer_decimal
                  (integer))
                (simple_name)))
            (named_element_association
              (choices
                (simple_name))
              value: (simple_name))))))))

=========================================
Qualified expression II [LRM]
=========================================
assert new CELL'(0, null, null);
---

(design_file
  (assertion_statement
    (allocator
      (qualified_expression
        (type_mark
          (simple_name))
        (aggregate
          (element_association_list
            (positional_element_association
              value: (integer_decimal
                (integer)))
            (positional_element_association
              value: (null))
            (positional_element_association
              value: (null))))))))

=========================================
Subtype indication LRM - I
=========================================
assert new String;
assert new String (1 to 10);
---

(design_file
  (assertion_statement
    (allocator
      (subtype_indication
        (type_mark
          (simple_name)))))
  (assertion_statement
    (allocator
      (subtype_indication
        (type_mark
          (simple_name))
        (array_constraint
          (index_constraint
            (ascending_range
              low: (integer_decimal
                (integer))
              high: (integer_decimal
                (integer)))))))))

=========================================
Subtype indication - LRM II
=========================================
assert new bit_vector (1 to index);
---

(design_file
  (assertion_statement
    (allocator
      (subtype_indication
        (type_mark
          (simple_name))
        (array_constraint
          (index_constraint
            (ascending_range
              low: (integer_decimal
                (integer))
              high: (simple_name))))))))
