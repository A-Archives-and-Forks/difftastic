============================================
Minimal
============================================
assert b"";
assert o"";
assert x"";

assert ub"";
assert uo"";
assert ux"";

assert sb"";
assert so"";
assert sx"";
---

(design_file
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)))))

============================================
Length
============================================
assert   4b"0";
assert  8ub"0";
assert 16sb"0";

assert   04o"0";
assert  08uo"0";
assert 016so"0";

assert   004x"0";
assert  008ux"0";
assert 0016sx"0";
---

(design_file
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (length)
        (base_specifier)
        (bit_value))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (length)
        (base_specifier)
        (bit_value))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (length)
        (base_specifier)
        (bit_value))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (length)
        (base_specifier)
        (bit_value))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (length)
        (base_specifier)
        (bit_value))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (length)
        (base_specifier)
        (bit_value))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (length)
        (base_specifier)
        (bit_value))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (length)
        (base_specifier)
        (bit_value))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (length)
        (base_specifier)
        (bit_value)))))

============================================
Bit value
============================================
assert  b"01";
assert ub"01";
assert sb"01";

assert  o"0123_4567";
assert uo"0123_4567";
assert so"0123_4567";

assert  x"0123_4567";
assert ux"0123_4567_89AB_CDEF";
assert sx"0123_4567_89AB_CDEF";
---

(design_file
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (separator)))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (separator)))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (separator)))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (separator)))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (separator)
          (separator)
          (separator)))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (separator)
          (separator)
          (separator))))))

============================================
std_match
============================================
assert  b"--";
---

(design_file
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (dont_care)
          (dont_care))))))

============================================
Error I
============================================
assert b"_0";
assert b"0_";
assert b"0__0";
assert b"0__c";
assert b"0__-";
---

(design_file
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (illegal)))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value)
        (ERROR
          (separator)))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (separator)
          (illegal)))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (separator)
          (illegal)
          (unresolved)))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (separator)
          (illegal)
          (dont_care))))))

============================================
Error II
============================================
assert b"_0";
assert b"_c";
assert b"_-";
---

(design_file
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (illegal)))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (illegal)
          (unresolved)))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (illegal)
          (dont_care))))))

============================================
Error III
============================================
assert b"__0";
assert b"___c";
---

(design_file
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (illegal)
          (separator)))))
  (assertion_statement
    (conditional_expression
      (bit_string_literal
        (base_specifier)
        (bit_value
          (illegal)
          (separator)
          (illegal)
          (unresolved))))))
