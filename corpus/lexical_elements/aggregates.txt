============================================
Positional association
============================================
assert (a,b);
assert (a,b,c);
---

(design_file
  (assertion_statement
    condition: (aggregate
      (element_asociation
        value: (simple_name))
      (element_asociation
        value: (simple_name))))
  (assertion_statement
    condition: (aggregate
      (element_asociation
        value: (simple_name))
      (element_asociation
        value: (simple_name))
      (element_asociation
        value: (simple_name)))))

============================================
Named association
============================================
assert (a=>b);
assert (a=>b,c=>d);
assert (a=>b,c=>d,e=>f);
---

(design_file
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (simple_name))
        value: (simple_name))))
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (simple_name))
        value: (simple_name))
      (element_asociation
        (choices
          choice: (simple_name))
        value: (simple_name))))
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (simple_name))
        value: (simple_name))
      (element_asociation
        (choices
          choice: (simple_name))
        value: (simple_name))
      (element_asociation
        (choices
          choice: (simple_name))
        value: (simple_name)))))

============================================
Choices
============================================
assert (a|b=>d);
assert (a|b|c=>d);
---

(design_file
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (simple_name)
          choice: (simple_name))
        value: (simple_name))))
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (simple_name)
          choice: (simple_name)
          choice: (simple_name))
        value: (simple_name)))))

============================================
Others
============================================
assert (others=>a);
assert (a,b=>c,others=>d);
---

(design_file
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (others))
        value: (simple_name))))
  (assertion_statement
    condition: (aggregate
      (element_asociation
        value: (simple_name))
      (element_asociation
        (choices
          choice: (simple_name))
        value: (simple_name))
      (element_asociation
        (choices
          choice: (others))
        value: (simple_name)))))

============================================
Mixed element associations
============================================
assert (a,b=>c);
assert (a,b,c=>d,e=>f);
assert (a,b,c|d=>e,f|g=>h);
---

(design_file
  (assertion_statement
    condition: (aggregate
      (element_asociation
        value: (simple_name))
      (element_asociation
        (choices
          choice: (simple_name))
        value: (simple_name))))
  (assertion_statement
    condition: (aggregate
      (element_asociation
        value: (simple_name))
      (element_asociation
        value: (simple_name))
      (element_asociation
        (choices
          choice: (simple_name))
        value: (simple_name))
      (element_asociation
        (choices
          choice: (simple_name))
        value: (simple_name))))
  (assertion_statement
    condition: (aggregate
      (element_asociation
        value: (simple_name))
      (element_asociation
        value: (simple_name))
      (element_asociation
        (choices
          choice: (simple_name)
          choice: (simple_name))
        value: (simple_name))
      (element_asociation
        (choices
          choice: (simple_name)
          choice: (simple_name))
        value: (simple_name)))))

============================================
Aggregate name on choice
============================================
assert (a'high=>b);
---

(design_file
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (attribute_name
            prefix: (simple_name)
            (attribute_designator)))
        value: (simple_name)))))

============================================
Discrete range I
============================================
assert (h downto l=>a);
assert (l to h=>a);
---

(design_file
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (descending_range
            high: (simple_name)
            low: (simple_name)))
        value: (simple_name))))
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (ascending_range
            low: (simple_name)
            high: (simple_name)))
        value: (simple_name)))))

============================================
Discrete range II
============================================
assert (t'range=>a);
assert (t'reverse_range=>a);
---

(design_file
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (range_attribute_name
            prefix: (simple_name)
            (range_attribute_designator)))
        value: (simple_name))))
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (range_attribute_name
            prefix: (simple_name)
            (range_attribute_designator)))
        value: (simple_name)))))

============================================
Discrete range III
============================================
assert (t'range(1)=>a);
assert (t'reverse_range(1)=>a);
---

(design_file
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (range_attribute_function_call
            function_call: (range_attribute_name
              prefix: (simple_name)
              (range_attribute_designator))
            (association_list
              (positional_association_element
                actual_part: (integer_decimal
                  (integer))))))
        value: (simple_name))))
  (assertion_statement
    condition: (aggregate
      (element_asociation
        (choices
          choice: (range_attribute_function_call
            function_call: (range_attribute_name
              prefix: (simple_name)
              (range_attribute_designator))
            (association_list
              (positional_association_element
                actual_part: (integer_decimal
                  (integer))))))
        value: (simple_name)))))
