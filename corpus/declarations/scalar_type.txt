======================================
Enumeration type - Minimal
======================================
type enum_t is ('a');
type enum_t is (foo);
---

(design_file
  (full_type_declaration
    (identifier)
    (enumeration_type_definition
      (character_literal)))
  (full_type_declaration
    (identifier)
    (enumeration_type_definition
      (identifier))))

======================================
Enumeration type - Character type
======================================
type enum_t is ('a', foo, bar);
---

(design_file
  (full_type_declaration
    (identifier)
    (enumeration_type_definition
      (character_literal)
      (identifier)
      (identifier))))

======================================
Integer type definition
======================================
type int_t is range 0 to 255;
---

(design_file
  (full_type_declaration
    (identifier)
    (numeric_type_definition
      (ascending_range
        low: (simple_expression
          (integer_decimal
            (integer)))
        high: (simple_expression
          (integer_decimal
            (integer)))))))

======================================
Floating type definition
======================================
type float_t is range 2.0 to 8.0;
---

(design_file
  (full_type_declaration
    (identifier)
    (numeric_type_definition
      (ascending_range
        low: (simple_expression
          (real_decimal
            (integer)
            (integer)))
        high: (simple_expression
          (real_decimal
            (integer)
            (integer)))))))

======================================
Physical type definition - Minimal
======================================
type phy_t is range l to h
    units
        p;
    end units;
---

(design_file
  (full_type_declaration
    (identifier)
    (physical_type_definition
      (range_constraint
        (ascending_range
          low: (simple_expression
            (simple_name))
          high: (simple_expression
            (simple_name))))
      (primary_unit_declaration
        (identifier)))))

======================================
Physical type definition
======================================
type phy_t is range l to h
    units
        p;
        a = p;
    end units;
---

(design_file
  (full_type_declaration
    (identifier)
    (physical_type_definition
      (range_constraint
        (ascending_range
          low: (simple_expression
            (simple_name))
          high: (simple_expression
            (simple_name))))
      (primary_unit_declaration
        (identifier))
      (secondary_unit_declaration
        (identifier)
        (physical_literal
          unit: (simple_name))))))

======================================
Physical type definition - LRM
======================================
type byte_t is range 0 to 1E16
    units
        B;
        -- decimal
        kB = 1000 B;
        MB = 1000 kB;
        GB = 1000 MB;
        TB = 1000 GB;
        -- binary
        KiB = 1024 B;
        MiB = 1024 KiB;
        GiB = 1024 MiB;
    end units;
---

(design_file
  (full_type_declaration
    (identifier)
    (physical_type_definition
      (range_constraint
        (ascending_range
          low: (simple_expression
            (integer_decimal
              (integer)))
          high: (simple_expression
            (integer_decimal
              (integer)
              (positive_exponent)))))
      (primary_unit_declaration
        (identifier))
      (comment)
      (secondary_unit_declaration
        (identifier)
        (physical_literal
          (integer_decimal
            (integer))
          unit: (simple_name)))
      (secondary_unit_declaration
        (identifier)
        (physical_literal
          (integer_decimal
            (integer))
          unit: (simple_name)))
      (secondary_unit_declaration
        (identifier)
        (physical_literal
          (integer_decimal
            (integer))
          unit: (simple_name)))
      (secondary_unit_declaration
        (identifier)
        (physical_literal
          (integer_decimal
            (integer))
          unit: (simple_name)))
      (comment)
      (secondary_unit_declaration
        (identifier)
        (physical_literal
          (integer_decimal
            (integer))
          unit: (simple_name)))
      (secondary_unit_declaration
        (identifier)
        (physical_literal
          (integer_decimal
            (integer))
          unit: (simple_name)))
      (secondary_unit_declaration
        (identifier)
        (physical_literal
          (integer_decimal
            (integer))
          unit: (simple_name))))))
