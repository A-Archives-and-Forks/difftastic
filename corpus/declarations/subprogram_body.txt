==========================
Procedure - Minimal
==========================
procedure p is
begin
end;

procedure p is
begin
end procedure;

procedure p is
begin
end procedure p;
---

(design_file
  (subprogram_body
    (procedure_specification
      designator: (identifier)))
  (subprogram_body
    (procedure_specification
      designator: (identifier))
    (subprogram_kind))
  (subprogram_body
    (procedure_specification
      designator: (identifier))
    (subprogram_kind)
    at_end: (simple_name)))

==========================
Function - Minimal
==========================
function f return t is
begin
end;

function f return t is
begin
end function;

function f return t is
begin
end function f;
---

(design_file
  (subprogram_body
    (pure_function_specification
      designator: (identifier)
      (return
        type_mark: (simple_name))))
  (subprogram_body
    (pure_function_specification
      designator: (identifier)
      (return
        type_mark: (simple_name)))
    (subprogram_kind))
  (subprogram_body
    (pure_function_specification
      designator: (identifier)
      (return
        type_mark: (simple_name)))
    (subprogram_kind)
    at_end: (simple_name)))

================================================
Header - Parameters (Implicit clause)
================================================
procedure p(a:b) is
begin
end;

function f(a:b) return t is
begin
end;
---

(design_file
  (subprogram_body
    (procedure_specification
      designator: (identifier)
      (formal_procedure_parameter_clause
        (interface_constant_declaration
          (identifier_list
            (identifier))
          (subtype_indication
            type_mark: (simple_name))))))
  (subprogram_body
    (pure_function_specification
      designator: (identifier)
      (formal_function_parameter_clause
        (interface_constant_declaration
          (identifier_list
            (identifier))
          (subtype_indication
            type_mark: (simple_name))))
      (return
        type_mark: (simple_name)))))

================================================
Header - Parameters (Explicit clause)
================================================
procedure p
    parameter (a:b) is
begin
end;

function f
    parameter (a:b) return t is
begin
end;
---

(design_file
  (subprogram_body
    (procedure_specification
      designator: (identifier)
      (formal_procedure_parameter_clause
        (interface_constant_declaration
          (identifier_list
            (identifier))
          (subtype_indication
            type_mark: (simple_name))))))
  (subprogram_body
    (pure_function_specification
      designator: (identifier)
      (formal_function_parameter_clause
        (interface_constant_declaration
          (identifier_list
            (identifier))
          (subtype_indication
            type_mark: (simple_name))))
      (return
        type_mark: (simple_name)))))

=======================================
Subprogram Header - Generic clause
=======================================
procedure p
      generic (k:t)
    parameter (a:b) is
begin
end procedure p;

function f
      generic (k:t)
    parameter (a:b) return t is
begin
end;
---

(design_file
  (subprogram_body
    (procedure_specification
      designator: (identifier)
      (subprogram_header
        (generic_clause
          (generic_interface_list
            (interface_constant_declaration
              (identifier_list
                (identifier))
              (subtype_indication
                type_mark: (simple_name))))))
      (formal_procedure_parameter_clause
        (interface_constant_declaration
          (identifier_list
            (identifier))
          (subtype_indication
            type_mark: (simple_name)))))
    (subprogram_kind)
    at_end: (simple_name))
  (subprogram_body
    (pure_function_specification
      designator: (identifier)
      (subprogram_header
        (generic_clause
          (generic_interface_list
            (interface_constant_declaration
              (identifier_list
                (identifier))
              (subtype_indication
                type_mark: (simple_name))))))
      (formal_function_parameter_clause
        (interface_constant_declaration
          (identifier_list
            (identifier))
          (subtype_indication
            type_mark: (simple_name))))
      (return
        type_mark: (simple_name)))))

=======================================
Subprogram Header - Generic map aspect
=======================================
procedure p
      generic (k:t)
      generic map (a)
    parameter (a:b) is
begin
end procedure p;

function f
      generic (k:t)
      generic map (a)
    parameter (a:b) return t is
begin
end;
---

(design_file
  (subprogram_body
    (procedure_specification
      designator: (identifier)
      (subprogram_header
        (generic_clause
          (generic_interface_list
            (interface_constant_declaration
              (identifier_list
                (identifier))
              (subtype_indication
                type_mark: (simple_name)))))
        (generic_map_aspect
          (generic_association_list
            (positional_association_element
              (actual_part
                (actual_designator
                  (simple_name)))))))
      (formal_procedure_parameter_clause
        (interface_constant_declaration
          (identifier_list
            (identifier))
          (subtype_indication
            type_mark: (simple_name)))))
    (subprogram_kind)
    at_end: (simple_name))
  (subprogram_body
    (pure_function_specification
      designator: (identifier)
      (subprogram_header
        (generic_clause
          (generic_interface_list
            (interface_constant_declaration
              (identifier_list
                (identifier))
              (subtype_indication
                type_mark: (simple_name)))))
        (generic_map_aspect
          (generic_association_list
            (positional_association_element
              (actual_part
                (actual_designator
                  (simple_name)))))))
      (formal_function_parameter_clause
        (interface_constant_declaration
          (identifier_list
            (identifier))
          (subtype_indication
            type_mark: (simple_name))))
      (return
        type_mark: (simple_name)))))

=======================================
Return statement
=======================================
function f is
begin
    return e;
end function;
---

(design_file
  (subprogram_body
    (pure_function_specification
      designator: (identifier))
    (subprogram_statement_part
      (return_statement
        (simple_name)))
    (subprogram_kind)))

============================================================
Header - Semi colon after generic clause (unexpected_token)
============================================================
procedure p
      generic (k:t); -- here
    parameter (a:b) is
begin
end procedure p;
---

(design_file
  (subprogram_body
    (procedure_specification
      designator: (identifier)
      (subprogram_header
        (generic_clause
          (generic_interface_list
            (interface_constant_declaration
              (identifier_list
                (identifier))
              (subtype_indication
                type_mark: (simple_name))))
          (semicolon))) (comment)
      (formal_procedure_parameter_clause
        (interface_constant_declaration
          (identifier_list
            (identifier))
          (subtype_indication
            type_mark: (simple_name)))))
    (subprogram_kind)
    at_end: (simple_name)))

============================================================
Header - Semi colon after generic maps aspect (unexpected_token)
============================================================
procedure p
      generic (k:t)
      generic map (a); -- here
    parameter (a:b) is
begin
end procedure p;
---

(design_file
  (subprogram_body
    (procedure_specification
      designator: (identifier)
      (subprogram_header
        (generic_clause
          (generic_interface_list
            (interface_constant_declaration
              (identifier_list
                (identifier))
              (subtype_indication
                type_mark: (simple_name)))))
        (generic_map_aspect
          (generic_association_list
            (positional_association_element
              (actual_part
                (actual_designator
                  (simple_name)))))
          (semicolon))) (comment)
      (formal_procedure_parameter_clause
        (interface_constant_declaration
          (identifier_list
            (identifier))
          (subtype_indication
            type_mark: (simple_name)))))
    (subprogram_kind)
    at_end: (simple_name)))
