=========================================
Minimal
=========================================
CONDITIONAL_VARIABLE_ASSIGNMENT:
t := e1 when c1;

CONDITIONAL_SIGNAL_ASSIGNMENT:
t <= w1 when c1;
---

(design_file
  (label)
  (conditional_variable_assignment
    target: (simple_name)
    (conditional_expressions
      value: (simple_name)
      (condition (simple_name))))
  (label)
  (concurrent_conditional_signal_assignment
    target: (simple_name)
    (conditional_waveforms
      (waveform_element
        value: (simple_name))
      (condition (simple_name)))))

=========================================
Multiple waverforms/expressions
=========================================
CONDITIONAL_VARIABLE_ASSIGNMENT:
t := e1 when c1 else
     e2 when c2 else
     e3;

CONDITIONAL_SIGNAL_ASSIGNMENT:
t <= w1 when c1 else
     e2 when c2 else
     e3;
---

(design_file
  (label)
  (conditional_variable_assignment
    target: (simple_name)
    (conditional_expressions
      value: (simple_name)
      (condition (simple_name))
      (alternative_conditional_expression
        value: (simple_name)
        (condition (simple_name)))
      (alternative_conditional_expression
        value: (simple_name))))
  (label)
  (concurrent_conditional_signal_assignment
    target: (simple_name)
    (conditional_waveforms
      (waveform_element
        value: (simple_name))
      (condition (simple_name))
      (alternative_conditional_waveform
        (waveform_element
          value: (simple_name))
        (condition (simple_name)))
      (alternative_conditional_waveform
        (waveform_element
          value: (simple_name))))))

=========================================
Force mode
=========================================
FORCE_DEFAULT:
t <= force a when e1 else b;

FORCE_IN:
t <= force in a when e1 else b;

FORCE_OUT:
t <= force out a when e1 else b;
---

(design_file
  (label)
  (conditional_force_assignment
    target: (simple_name)
    (conditional_expressions
      value: (simple_name)
      (condition (simple_name))
      (alternative_conditional_expression
        value: (simple_name))))
  (label)
  (conditional_force_assignment
    target: (simple_name)
    (force_mode (in))
    (conditional_expressions
      value: (simple_name)
      (condition (simple_name))
      (alternative_conditional_expression
        value: (simple_name))))
  (label)
  (conditional_force_assignment
    target: (simple_name)
    (force_mode (out))
    (conditional_expressions
      value: (simple_name)
      (condition (simple_name))
      (alternative_conditional_expression
        value: (simple_name)))))

============================================
Delay mechanism
============================================
TRANSPORT_DELAY:
t <= transport e when c1;

INERTIAL_DELAY:
t <= reject 10 ns inertial e when c1;

REJECT_DELAY:
t <= inertial e when c1;
---

(design_file
  (label)
  (concurrent_conditional_signal_assignment
    target: (simple_name)
    (delay_mechanism (transport))
    (conditional_waveforms
      (waveform_element
        value: (simple_name))
      (condition
        (simple_name))))
  (label)
  (concurrent_conditional_signal_assignment
    target: (simple_name)
    (delay_mechanism
      (reject
        pulse_limit: (physical_literal
          coefficient: (integer_decimal)
          unit_name: (simple_name))))
    (conditional_waveforms
      (waveform_element
        value: (simple_name))
      (condition
        (simple_name))))
  (label)
  (concurrent_conditional_signal_assignment
    target: (simple_name)
    (delay_mechanism (inertial))
    (conditional_waveforms
      (waveform_element
        value: (simple_name))
      (condition
        (simple_name)))))
